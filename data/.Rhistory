# (e.g. half the average peak height in the sample is less than max peak height in the blanks)
# Then we look at each subnetwork, if more than 50% of the features in a subnetwork are background, we remove the whole subnetwork
## Change the original dataframe below depending on the species to look at
blanksFlagged <- porWm%>%
mutate(netVals = case_when(network == -1 ~ as.numeric(featureNumber)*-1,
TRUE ~ network))%>%
mutate(sampleType = case_when(sampleNum %like any% c('%Blank%', '%Metha%') ~ 'Blank',
TRUE ~ 'sample'))%>%
group_by(featureNumber)%>%
mutate(sampleXic = case_when(!sampleType %like% '%Blank' ~ xic,
TRUE ~ NA_real_),
meanSample = mean(sampleXic, na.rm = TRUE),
blankXic = case_when(sampleType %like% '%Blank%' ~ xic,
TRUE ~ NA_real_),
maxBlank = max(blankXic, na.rm = TRUE),
# transientNum = sum(sampleXic > 5E4, na.rm = TRUE),
# Real columns
background = case_when(meanSample*0.5 > maxBlank ~ 'real',
TRUE ~ 'background'))%>%
ungroup()%>%
flagBackgroundNetworks(netVals, background, minConsensus = 0.3)
#Filtering everything so that we are only looking at how many features are real
noBlanks <- blanksFlagged%>%
filter(background == 'real',
backgroundNetworks == 'real')
#Counting how many features we defined as background features
# 2142 features in 615 subnetworks/single-loop nodes before background removal
# Montipora 1426 features in 400 subnetworks/single-loop nodes after background removal
# Porites 1315 features in 386 subnetworks/single=loop nodes after background removal
blanksFlagged$featureNumber%>%
unique()%>%
length()
blanksFlagged%>%
pull(netVals)%>%
unique()%>%
length()
noBlanks$featureNumber%>%
unique()%>%
length()
noBlanks%>%
mutate(netVals = case_when(network == -1 ~ as.numeric(featureNumber)*-1,
TRUE ~ network))%>%
pull(netVals)%>%
unique()%>%
length()
# Cleaning -- minimum peak height -----------------------------------------
# First we need to look at a histogram of the XICs in the data to identify what is a rare xic
# By looking at the max abundance of each ion feature we can identify what xic first quartile
maxIntensities <- noBlanks%>%
filter(sampleType != 'Blank')%>%
select(featureNumber, xic)%>%
group_by(featureNumber)%>%
summarize_if(is.numeric, max)
maxIntensities%>%
summary()
# Anything below the red line we are defining as rare and will remove them
# We removed some specific sites do to sampling issues or were clear outliers:
# Sites were filtered out because they either had too few samples (WM-3 & WM-4), were deep samples (WM-04-Deep, WM-19) or were
#    obvious outliers according to the HCA analysis (WM-S09-CO2-MC)
# Additionally sites that did not have a Site designation were removed
pdf('~/Documents/GitHub/greeneMaui/data/plots/rareRemoval.pdf', width = 10, height = 10)
noBlanks%>%
filter(sampleType != 'Blank')%>%
ggplot(aes(reorder(featureNumber, xic), xic)) +
geom_point() +
geom_hline(yintercept = 86813, color = 'red') +
labs(x = 'Feature', y = 'Max Ion Intensity (XIC)')
dev.off()
noRare <- noBlanks%>%
mutate(siteGroup = recode(Site, 'WM-01' = "Site-14", 'WM-02' = "Site-11", 'WM-05' = "Site-10", 'WM-06' = "Site-12", 'WM-08' = "Site-08",
'WM-09' = "Site-04", 'WM-10' = "Site-03", 'WM-11' = "Site-01", 'WM-12' = "Site-06", 'WM-13' = "Site-09",
'WM-14' = "Site-07", 'WM-15' = "Site-15", 'WM-16' = "Site-02", 'WM-17' = "Site-16", 'WM-18' = "Site-05",
'WM-20' = "Site-13"))%>%
filter(sampleType != 'Blank',
!Site %in% c("WM-03", "WM-04", "WM-04-Deep", "WM-19", 'WM-07'),
SampleID != "WM-S09-C02-MC",
!is.na(siteGroup))%>%
group_by(featureNumber)%>%
filter(max(xic, na.rm = TRUE) > 86813)
# Counting how many features we have remaining after removing rare features
# Montipora 966 features belonging to 266 subnetworks/single loop nodes remain
# Porites 786 features bolong to 240 subnetworks/single loop nodes remain
noRare%>%
pull(featureNumber)%>%
unique()%>%
length()
noRare%>%
mutate(netVals = case_when(network == -1 ~ as.numeric(featureNumber)*-1,
TRUE ~ network))%>%
pull(netVals)%>%
unique()%>%
length()
# Cleaning -- making the stats working data frame -------------------------
# This is the working data frame (WDF) which we will use for all stats and plotting
# It is all the raw feature xic and log10 transformed xic for each sample with metadata included
# The HCAGrouping is calculated from a cluster dendogram lower in this code
# For the sake of simplicity, those groupings were added to the working data frame here
statsWdf <- noRare%>%
ungroup()%>%
select(-c(sampleType:backgroundNetworks))%>%
group_by(SampleID)%>%
mutate(log10 = log10(xic + 1),
ra = xic/sum(xic),
asin = asin(sqrt(ra)),
HCAgrouping = recode(siteGroup, 'Site-15' = 1, 'Site-06' = 1, 'Site-07' = 1, 'Site-04' = 1, 'Site-09' = 1,
# 'Site-12' = 0, #Montipora Groups
# 'Site-01' = 2, #Montipora Groups
'Site-12' = 2, #Porites Groups
'Site-01' = 1, #Porites Groups
'Site-10' = 2, 'Site-08' = 2, 'Site-11' = 2, 'Site-14' = 2,
'Site-16' = 3, 'Site-05' = 3, 'Site-13' = 3, 'Site-02' = 3, 'Site-03' = 3),
HCAgrouping = as.factor(HCAgrouping),
HCAgrouping = fct_relevel(HCAgrouping, '1','2','3'),
netVals = case_when(network == -1 ~ as.numeric(featureNumber)*-1,
TRUE ~ network))
statsWdf%>%
select(-c(network, netVals, log10, ra, asin))%>%
pivot_wider(names_from = 'featureNumber', values_from = 'xic')%>%
select(SampleID, siteGroup)%>%
mutate(n = 1)%>%
group_by(siteGroup)%>%
summarize_if(is.numeric, sum)%>%
summary()
# SET SEED ----------------------------------------------------------------
set.seed(23068)
# STATS -- LMER -- Metabolites predicted by SITE ----------------------------------
lmerHCAGroups <- statsWdf%>%
group_by(netVals)%>%
nest()%>%
# mutate(data = map(data, ~lmer(asin ~ HCAgrouping + (1|featureNumber) + (1|siteGroup), data = .x,
#                               control =  lmerControl(check.nlev.gtr.1 = "ignore",
#                                                      check.conv.singular = 'ignore',
#                                                      check.nobs.vs.nRE = 'ignore'))%>%
mutate(data = map(data, ~lmer(asin ~ siteGroup + (1|featureNumber), data = .x,
control =  lmerControl(check.nlev.gtr.1 = "ignore",
check.conv.singular = 'ignore',
check.nobs.vs.nRE = 'ignore'))%>%
car::Anova()%>%
.[['Pr(>Chisq)']]))
significantValues <- lmerHCAGroups%>%
unnest(data)%>%
ungroup()%>%
mutate(pAdjusted = p.adjust(data, method = 'BH'))%>%
filter(pAdjusted < 0.05)
# 242 out of 260 subnetworks were signicant using asin ra for MONTIPORA FOR SITE
# 189 out of 260 subnetworks were signicant using asin ra for PORITES
nrow(significantValues)
hcaSigSubnets <- significantValues$netVals
# Figure 1a --  HCA of metabolomes -----------------------------------------------
siteAverageMetabolomes <- statsWdf%>%
left_join(canopus%>%
select(superclass, class, subclass, featureNumber), by = 'featureNumber')%>%
filter(netVals %in% hcaSigSubnets)%>%
group_by(siteGroup, netVals, SampleID, superclass, class, subclass)%>%
summarize_if(is.numeric, sum)%>%
ungroup()%>%
mutate(ra = asin(sqrt(ra)))%>%
unite(annotation, c(superclass, class, subclass), sep = ';')%>%
group_by(siteGroup, annotation)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
select(siteGroup, annotation, ra)%>%
group_by(annotation)%>%
mutate(ra = zscore(ra))%>%
ungroup()%>%
separate(annotation, c('superclass', 'class', 'subclass'), sep = ';')%>%
mutate(deepestAnnotation = case_when(subclass != 'NA' ~ subclass,
class != 'NA' & subclass == 'NA' ~ class,
TRUE ~ superclass))%>%
select(-c(superclass, class, subclass))%>%
pivot_wider(names_from = 'deepestAnnotation', values_from = 'ra')%>%
column_to_rownames(var = 'siteGroup')
siteAverageMetabolomes%>%
pheatmap::pheatmap()
#dendo grouping for montipora
dendo <- pheatmap::pheatmap(siteAverageMetabolomes)$tree_row
dendo <- dendextend::rotate(dendo, order = c('Site-12','Site-15', 'Site-06', 'Site-07', 'Site-04', 'Site-09',
'Site-01', 'Site-10', 'Site-08', 'Site-11', 'Site-14',
'Site-16', 'Site-05', 'Site-13', 'Site-02', 'Site-03'))
annotationList <- list(Site = c('Site-15' = '#E56C2F', 'Site-06' = '#E56C2F', 'Site-07' = '#E56C2F', 'Site-04' = '#E56C2F', 'Site-09' = '#E56C2F',
'Site-12' ='#B485D8', 'Site-01' = '#B485D8', 'Site-10' = '#B485D8','Site-08' = '#B485D8', 'Site-11' = '#B485D8', 'Site-14' = '#B485D8',
'Site-16' = '#56B7E9', 'Site-05' = '#56B7E9', 'Site-13' = '#56B7E9', 'Site-02' = '#56B7E9', 'Site-03' = '#56B7E9'))
annotationColorDf <- data.frame(Site = c('Site-15', 'Site-06', 'Site-07', 'Site-04', 'Site-09',
'Site-12', 'Site-01', 'Site-10', 'Site-08', 'Site-11', 'Site-14',
'Site-16', 'Site-05', 'Site-13', 'Site-02', 'Site-03'),
row.names = c('Site-15', 'Site-06', 'Site-07', 'Site-04', 'Site-09',
'Site-12', 'Site-01', 'Site-10', 'Site-08', 'Site-11', 'Site-14',
'Site-16', 'Site-05', 'Site-13', 'Site-02', 'Site-03'))
pdf('~/Documents/GitHub/greeneMaui/data/plots/biclusterSubnetworkAverages.pdf', width = 20, height = 12)
pheatmap::pheatmap(siteAverageMetabolomes, cluster_rows = dendo, color = brewer.pal(n = 9, name = "Greys"),
angle_col = 45)
# annotation_color = annotationList, annotation_col = annotationColorDf)
dev.off()
labels <- c('Site-15', 'Site-06', 'Site-07', 'Site-04', 'Site-09',
'Site-12', 'Site-01', 'Site-10', 'Site-08', 'Site-11', 'Site-14',
'Site-16', 'Site-05', 'Site-13', 'Site-02', 'Site-03')
#dendo grouping for porites
dendoPor <- pheatmap::pheatmap(siteAverageMetabolomes)$tree_row
dendoPor <- dendextend::rotate(dendo, order = c('Site-03', 'Site-05', 'Site-16','Site-02', 'Site-13',
'Site-14', 'Site-08','Site-10', 'Site-11','Site-12',
'Site-15', 'Site-09', 'Site-06', 'Site-07', 'Site-01', 'Site-04'))
pdf('~/Documents/GitHub/greeneMaui/data/plots/poritesBiclusterSubnetworkAverages.pdf', width = 20, height = 12)
pheatmap::pheatmap(siteAverageMetabolomes, cluster_rows = dendoPor, color = brewer.pal(n = 9, name = "Greys"),
angle_col = 45)
dev.off()
# Visual -- Environmental variability across hca clusters -----------------
landUse <- landUseRaw%>%
select(Site, Hab_Status, Shape_Area)%>%
group_by(Site, Hab_Status)%>%
summarize_if(is.numeric, sum, na.rm = TRUE)%>%
ungroup()%>%
add_row(Site = 'WM-15', Hab_Status = 'Heavily Disturbed', Shape_Area = 0)%>%
group_by(Site)%>%
mutate(habPercent = Shape_Area/sum(Shape_Area, na.rm = TRUE))%>%
ungroup()%>%
filter(Hab_Status == 'Heavily Disturbed')
siteLatLong <- rawMetadata%>%
left_join(statsWdf%>%
ungroup()%>%
select(Site, siteGroup, HCAgrouping), by = 'Site')%>%
mutate(HCAgrouping = as.factor(HCAgrouping),
HCAgrouping = fct_relevel(HCAgrouping, '3','2','1'))%>%
select(siteGroup, HCAgrouping, TNC.Lat, TNC.Long)%>%
filter(!is.na(siteGroup))%>%
unique()
write_csv(siteLatLong, '~/Downloads/MauiContaminantSiteLatLong.csv')
enviroVariability <- rawMetadata%>%
left_join(statsWdf%>%
ungroup()%>%
select(Site, siteGroup, HCAgrouping), by = 'Site')%>%
left_join(landUse, by = 'Site')%>%
select(TNC.Coral.Cover, TNC.Coral.Disease, TNC.Phosphate.Benthic,
TNC.Silicate.Benthic, TNC.NN.Benthic, TNC.Ammonia.Benthic,
TNC.Coral.Diversity, TNC.Raw.Resilience.Score,
TNC.Herbivore.Biomass, habPercent, HCAgrouping, Site, siteGroup)%>%
unique()%>%
filter(!is.na(TNC.Coral.Cover),
siteGroup %in% labels,
siteGroup != 'Site-12'
)%>%
mutate(TNC.Phosphate.Benthic.log = log10(TNC.Phosphate.Benthic),
TNC.Silicate.Benthic.log = log10(TNC.Silicate.Benthic),
TNC.NN.Benthic.log = log10(TNC.NN.Benthic),
TNC.Ammonia.Benthic.log = log10(TNC.Ammonia.Benthic),
N2P = TNC.NN.Benthic/TNC.Phosphate.Benthic,
site = siteGroup,
# HCAgrouping = recode(siteGroup, 'Site-15' = 1, 'Site-06' = 1, 'Site-07' = 1, 'Site-04' = 1, 'Site-09' = 1,
#                      'Site-12' = 2, 'Site-01' = 2, 'Site-10' = 2, 'Site-08' = 2, 'Site-11' = 2, 'Site-14' = 2,
#                      'Site-16' = 3, 'Site-05' = 3, 'Site-13' = 3, 'Site-02' = 3, 'Site-03' = 3),
HCAgrouping = as.factor(HCAgrouping),
HCAgrouping = fct_relevel(HCAgrouping, '3','2','1'),
site = as.factor(site),
site = fct_relevel(site, 'Site-15', 'Site-06', 'Site-07', 'Site-04', 'Site-09',
'Site-01', 'Site-10', 'Site-08', 'Site-11', 'Site-14',
'Site-16', 'Site-05', 'Site-13', 'Site-02', 'Site-03')) # Montipora order
# Plotting the N and P values of benthic systems
pdf('~/Documents/GitHub/greeneMaui/data/plots/environmentalParameterViolins.pdf', width = 6, height = 10)
enviroVariability%>%
ggplot(aes(TNC.NN.Benthic.log, HCAgrouping, color = HCAgrouping)) +
geom_point(stat = 'identity', alpha= 0.5, size = 3) +
# scale_y_discrete(limits=rev) +
geom_boxplot() +
scale_color_manual(values = rev(hcaColors)) +
genTheme() +
labs(y = 'Cluster', x = 'Benthic Nitrogen') +
theme(axis.line.y = element_line(),
axis.line.x = element_line(),
panel.border = element_blank(),
legend.position = 'None')
enviroVariability%>%
ggplot(aes(TNC.Ammonia.Benthic.log, HCAgrouping, color = HCAgrouping)) +
geom_boxplot() +
geom_point(stat = 'identity', alpha= 0.5, size = 3) +
# scale_y_discrete(limits=rev) +
scale_color_manual(values = rev(hcaColors)) +
genTheme() +
labs(y = 'Cluster', x = 'Benthic Ammonium') +
theme(axis.line.y = element_line(),
axis.line.x = element_line(),
panel.border = element_blank(),
legend.position = 'None')
enviroVariability%>%
ggplot(aes(TNC.Phosphate.Benthic.log, HCAgrouping, color = HCAgrouping)) +
geom_boxplot() +
geom_point(stat = 'identity', alpha= 0.5, size = 3) +
# scale_y_discrete(limits=rev) +
genTheme() +
scale_color_manual(values = rev(hcaColors)) +
labs(y = 'Cluster', x = 'Benthic Phosphorous') +
theme(axis.line.y = element_line(),
axis.line.x = element_line(),
panel.border = element_blank(),
legend.position = 'None')
enviroVariability%>%
ggplot(aes(N2P, HCAgrouping, color = HCAgrouping)) +
geom_boxplot() +
geom_point(stat = 'identity', alpha= 0.5, size = 3) +
# scale_y_discrete(limits=rev) +
genTheme() +
scale_color_manual(values = rev(hcaColors)) +
labs(y = 'Cluster', x = 'Benthic Nitrogen/Benthic Phosphorous') +
theme(axis.line.y = element_line(),
axis.line.x = element_line(),
panel.border = element_blank(),
legend.position = 'None')
enviroVariability%>%
ggplot(aes(TNC.Silicate.Benthic.log, HCAgrouping, color = HCAgrouping)) +
geom_boxplot() +
geom_point(stat = 'identity', alpha= 0.5, size = 3) +
# scale_y_discrete(limits=rev) +
genTheme() +
scale_color_manual(values = rev(hcaColors)) +
labs(y = 'Cluster', x = 'Benthic Silicate') +
theme(axis.line.y = element_line(),
axis.line.x = element_line(),
panel.border = element_blank(),
legend.position = 'None')
enviroVariability%>%
ggplot(aes(habPercent*100, HCAgrouping, color = HCAgrouping)) +
geom_boxplot() +
geom_point(stat = 'identity', alpha= 0.5, size = 3) +
# scale_y_discrete(limits=rev) +
genTheme() +
scale_color_manual(values = rev(hcaColors)) +
labs(y = 'Cluster', x = 'Terrestrial percent disturbance') +
theme(axis.line.y = element_line(),
axis.line.x = element_line(),
panel.border = element_blank(),
legend.position = 'None')
enviroVariability%>%
select(HCAgrouping, siteGroup, TNC.Ammonia.Benthic.log, TNC.Phosphate.Benthic.log, TNC.Silicate.Benthic.log, habPercent)%>%
unite(site, c(HCAgrouping, siteGroup), sep = ' ')%>%
pivot_longer(3:ncol(.), names_to = 'responseVar', values_to = 'values')%>%
group_by(responseVar)%>%
mutate(values = zscore(values),
site = as.factor(site),
# site = fct_relevel(site, '0 Site-12', '1 Site-15', '1 Site-06', '1 Site-07', '1 Site-04', '1 Site-09',
#                    '2 Site-01', '2 Site-10', '2 Site-08', '2 Site-11', '2 Site-14',
#                    '3 Site-16', '3 Site-05', '3 Site-13', '3 Site-02', '3 Site-03'))%>% # Montipora order
site = fct_relevel(site, '3 Site-03', '3 Site-05', '3 Site-16', '3 Site-02', '3 Site-13',
'2 Site-14', '2 Site-08', '2 Site-10', '2 Site-11', '2 Site-12',
'1 Site-15', '1 Site-09', '1 Site-06', '1 Site-07', '1 Site-01', '1 Site-04'
))%>% # Porites order
ungroup()%>%
arrange(site)%>%
pivot_wider(names_from = 'responseVar', values_from = 'values')%>%
column_to_rownames(var = 'site')%>%
pheatmap::pheatmap(cluster_rows = FALSE, color = brewer.pal(n = 9, name = "BuGn"))
dev.off()
pdf('~/Documents/GitHub/greeneMaui/data/plots/EnviroBiplotsExpanded.pdf', width = 15, height = 10)
enviroVariability%>%
select(HCAgrouping, siteGroup, TNC.Ammonia.Benthic.log, TNC.Phosphate.Benthic.log, TNC.Silicate.Benthic.log, habPercent)%>%
unite(site, c(HCAgrouping, siteGroup), sep = ' ')%>%
pivot_longer(3:ncol(.), names_to = 'responseVar', values_to = 'values')%>%
group_by(responseVar)%>%
mutate(values = zscore(values),
site = as.factor(site),
# site = fct_relevel(site, '0 Site-12', '1 Site-15', '1 Site-06', '1 Site-07', '1 Site-04', '1 Site-09',
#                    '2 Site-01', '2 Site-10', '2 Site-08', '2 Site-11', '2 Site-14',
#                    '3 Site-16', '3 Site-05', '3 Site-13', '3 Site-02', '3 Site-03'))%>% # Montipora order
site = fct_relevel(site, '3 Site-03', '3 Site-05', '3 Site-16', '3 Site-02', '3 Site-13',
'2 Site-14', '2 Site-08', '2 Site-10', '2 Site-11', '2 Site-12',
'1 Site-15', '1 Site-09', '1 Site-06', '1 Site-07', '1 Site-01', '1 Site-04'
))%>% # Porites order
ungroup()%>%
arrange(site)%>%
pivot_wider(names_from = 'responseVar', values_from = 'values')%>%
column_to_rownames(var = 'site')%>%
pheatmap::pheatmap(color = brewer.pal(n = 9, name = "BuGn"))
enviroVariability%>%
select(HCAgrouping, siteGroup, TNC.Coral.Disease, TNC.Coral.Cover, TNC.Raw.Resilience.Score, TNC.Herbivore.Biomass, TNC.NN.Benthic.log, TNC.Ammonia.Benthic.log, TNC.Phosphate.Benthic.log, TNC.Silicate.Benthic.log, habPercent)%>%
unite(site, c(HCAgrouping, siteGroup), sep = ' ')%>%
pivot_longer(3:ncol(.), names_to = 'responseVar', values_to = 'values')%>%
group_by(responseVar)%>%
mutate(values = zscore(values),
site = as.factor(site),
# site = fct_relevel(site, '0 Site-12', '1 Site-15', '1 Site-06', '1 Site-07', '1 Site-04', '1 Site-09',
#                    '2 Site-01', '2 Site-10', '2 Site-08', '2 Site-11', '2 Site-14',
#                    '3 Site-16', '3 Site-05', '3 Site-13', '3 Site-02', '3 Site-03'))%>% # Montipora order
site = fct_relevel(site, '3 Site-03', '3 Site-05', '3 Site-16', '3 Site-02', '3 Site-13',
'2 Site-14', '2 Site-08', '2 Site-10', '2 Site-11', '2 Site-12',
'1 Site-15', '1 Site-09', '1 Site-06', '1 Site-07', '1 Site-01', '1 Site-04'
))%>% # Porites order
ungroup()%>%
arrange(site)%>%
pivot_wider(names_from = 'responseVar', values_from = 'values')%>%
column_to_rownames(var = 'site')%>%
pheatmap::pheatmap(color = brewer.pal(n = 9, name = "BuGn"))
enviroVariability%>%
select(HCAgrouping, siteGroup, TNC.Coral.Disease, TNC.Coral.Cover, TNC.Raw.Resilience.Score, TNC.Herbivore.Biomass)%>%
unite(site, c(HCAgrouping, siteGroup), sep = ' ')%>%
pivot_longer(3:ncol(.), names_to = 'responseVar', values_to = 'values')%>%
group_by(responseVar)%>%
mutate(values = zscore(values),
site = as.factor(site),
# site = fct_relevel(site, '0 Site-12', '1 Site-15', '1 Site-06', '1 Site-07', '1 Site-04', '1 Site-09',
#                    '2 Site-01', '2 Site-10', '2 Site-08', '2 Site-11', '2 Site-14',
#                    '3 Site-16', '3 Site-05', '3 Site-13', '3 Site-02', '3 Site-03'))%>% # Montipora order
site = fct_relevel(site, '3 Site-03', '3 Site-05', '3 Site-16', '3 Site-02', '3 Site-13',
'2 Site-14', '2 Site-08', '2 Site-10', '2 Site-11', '2 Site-12',
'1 Site-15', '1 Site-09', '1 Site-06', '1 Site-07', '1 Site-01', '1 Site-04'
))%>% # Porites order
ungroup()%>%
arrange(site)%>%
pivot_wider(names_from = 'responseVar', values_from = 'values')%>%
column_to_rownames(var = 'site')%>%
pheatmap::pheatmap(color = brewer.pal(n = 9, name = "BuGn"))
dev.off()
# Stats -- enviroVariability -- ANOVA -------------------------------------
enviroVariability%>%
select(HCAgrouping, siteGroup, TNC.Ammonia.Benthic.log, TNC.Phosphate.Benthic.log, TNC.Silicate.Benthic.log, habPercent)%>%
pivot_longer(3:ncol(.), names_to = 'responseVar', values_to = 'values')%>%
group_by(responseVar)%>%
nest()%>%
mutate(data = map(data, ~car::Anova(lm(values~HCAgrouping, data = .x), type = 'II')%>%
tidy()
))%>%
unnest(data)
# Visual -- TIC -----------------------------------------------------------
# Have to figure out how they did the sampling. Were all the samples chunks?
# Might have to calculate RA so that we are not dealing with concentration issues
statsWdf%>%
unite(local, c(Site, HCAgrouping), sep = '_')%>%
group_by(SampleID, local)%>%
summarize_if(is.numeric, sum)%>%
ungroup()%>%
ggplot(aes(local, xic)) +
geom_boxplot()
# Supplemental Figure 1 -- PCoA -- grouped at the subnetwork consensus level four clusters ---------------------------------
pcoaSuperclassDf <- statsWdf%>%
filter(netVals %in% hcaSigSubnets,
siteGroup != 'Site-12'
)%>%
left_join(canopus%>%
select(superclass, class, subclass, featureNumber), by = 'featureNumber')%>%
# left_join(conciseRaw, by = 'featureNumber')%>%
unite(annotation, c(superclass, class, subclass), sep = ';')%>%
group_by(annotation, SampleID, Site, ColonyID, HCAgrouping)%>%
summarize_if(is.numeric, sum)%>%
ungroup()%>%
# mutate(log10 = log10(xic + 1))%>%
mutate(asin = asin(sqrt(ra)))%>%
select(annotation, SampleID, Site, ColonyID, HCAgrouping, asin)%>%
unite(sample, c('SampleID', 'Site', 'ColonyID',  'HCAgrouping'), sep = ';')%>%
pivot_wider(names_from = 'annotation', values_from = 'asin')%>%
column_to_rownames(var = 'sample')
pcoaSuperclass <- pcoaSuperclassDf%>%
vegdist()%>%
pcoa()
#Plotting PCoAs
pdf('~/Documents/GitHub/greeneMaui/data/plots/pcoaSubclass3Clusters.pdf', width = 15, height = 10)
pcoaSuperclass$vectors%>%
as.data.frame()%>%
rownames_to_column(var = "sample")%>%
separate(sample, c('SampleID', 'Site', 'ColonyID',  'HCAgrouping'), sep = ';')%>%
ggplot(., aes(x = Axis.1, y = Axis.2, color = HCAgrouping)) +
geom_point(size = 8) +
# ggforce::geom_mark_ellipse(aes(fill = HCAgrouping)) +
scale_color_manual(values = hcaColors) +
# scale_fill_manual(values = hcaColors4) +
# ggforce::geom_mark_ellipse(aes(fill = HCAgrouping)) +
# geom_text(aes(label = Day), size = 12) +
# scale_color_manual(values = healthColors) +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.y = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of major grid
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.text = element_text(face = "italic"),
axis.text = element_text(size = 25),
axis.title = element_text(size = 25)) +
xlab(str_c("Axis 1", " (", round(pcoaSuperclass$values$Relative_eig[1], digits = 4)*100, "%)", sep = "")) +
ylab(str_c("Axis 2", " (", round(pcoaSuperclass$values$Relative_eig[2], digits = 4)*100, "%)", sep = ""))
dev.off()
# Stats Fig. S1 -- PERMANOVA for subclass PcOA ------------------------------------
pcoaSuperclassDf%>%
rownames_to_column(var = "sample")%>%
separate(sample, c('SampleID', 'Site', 'ColonyID',  'HCAgrouping'), sep = ';')%>%
adonis2(.[5:ncol(.)]~HCAgrouping, data = .)
pairwiseDf <- pcoaSuperclassDf%>%
rownames_to_column(var = "sample")%>%
separate(sample, c('SampleID', 'Site', 'ColonyID',  'HCAgrouping'), sep = ';')
pairwiseAdonis::pairwise.adonis2(pairwiseDf[5:ncol(pairwiseDf)]~HCAgrouping, data = pairwiseDf)
# Stats -- Prechecks Multiple Regression -- pcoa Axis 1 vs environmental variables  -------------------------------------------
pcoaAxis <- pcoaSuperclass$vectors%>%
as.data.frame()%>%
rownames_to_column(var = 'sample')%>%
select(sample, Axis.1)%>%
separate(sample, c('SampleID', 'Site', 'ColonyID',  'HCAgrouping'), sep = ';')%>%
group_by(Site, HCAgrouping)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)
pcoaMulReg <- pcoaAxis%>%
left_join(enviroVariability, by = c('Site', 'HCAgrouping'))
# Checking to see if there is too much correlation between any of the
pcoaMulReg%>%
ungroup()%>%
select(Axis.1, TNC.Ammonia.Benthic.log, TNC.NN.Benthic.log, TNC.Phosphate.Benthic.log, TNC.Silicate.Benthic.log, habPercent)%>%
cor()%>%
corrplot::corrplot()
# Stats -- Multiple Regression AIC ----------------------------------------
lm_test <- lm(Axis.1 ~ TNC.Ammonia.Benthic.log + TNC.NN.Benthic.log + TNC.Phosphate.Benthic.log + TNC.Silicate.Benthic.log + habPercent,
data = pcoaMulReg)
# Other Variables:
#  TNC.Coral.Cover + TNC.Coral.Disease + TNC.Coral.Diversity + TNC.Raw.Resilience.Score + TNC.Herbivore.Biomass +
#Dredge
options(na.action = na.fail)
dredge_n_select <- MuMIn::dredge(lm_test)
sink('./analysis/dredge_model_selection.txt')
head(dredge_n_select)
sink()
